{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport hash from '@emotion/hash';\n// @ts-ignore\nimport unitless from '@emotion/unitless';\nimport { compile, serialize, stringify } from 'stylis';\nimport { contentQuotesLinter, hashedAnimationLinter } from '../linters';\nimport { useStyleInject, ATTR_DEV_CACHE_PATH, ATTR_MARK, ATTR_TOKEN, CSS_IN_JS_INSTANCE, CSS_IN_JS_INSTANCE_ID } from '../StyleContext';\nimport { supportLayer } from '../util';\nimport useGlobalCache from './useGlobalCache';\nimport canUseDom from '../../canUseDom';\nimport { removeCSS, updateCSS } from '../../../vc-util/Dom/dynamicCSS';\nimport { computed } from 'vue';\nvar isClientSide = canUseDom();\nvar SKIP_CHECK = '_skip_check_';\n// ============================================================================\n// ==                                 Parser                                 ==\n// ============================================================================\n// Preprocessor style content to browser support one\nexport function normalizeStyle(styleStr) {\n  var serialized = serialize(compile(styleStr), stringify);\n  return serialized.replace(/\\{%%%\\:[^;];}/g, ';');\n}\nfunction isCompoundCSSProperty(value) {\n  return _typeof(value) === 'object' && value && SKIP_CHECK in value;\n}\n// 注入 hash 值\nfunction injectSelectorHash(key, hashId, hashPriority) {\n  if (!hashId) {\n    return key;\n  }\n  var hashClassName = \".\".concat(hashId);\n  var hashSelector = hashPriority === 'low' ? \":where(\".concat(hashClassName, \")\") : hashClassName;\n  // 注入 hashId\n  var keys = key.split(',').map(function (k) {\n    var _a;\n    var fullPath = k.trim().split(/\\s+/);\n    // 如果 Selector 第一个是 HTML Element，那我们就插到它的后面。反之，就插到最前面。\n    var firstPath = fullPath[0] || '';\n    var htmlElement = ((_a = firstPath.match(/^\\w+/)) === null || _a === void 0 ? void 0 : _a[0]) || '';\n    firstPath = \"\".concat(htmlElement).concat(hashSelector).concat(firstPath.slice(htmlElement.length));\n    return [firstPath].concat(_toConsumableArray(fullPath.slice(1))).join(' ');\n  });\n  return keys.join(',');\n}\n// Global effect style will mount once and not removed\n// The effect will not save in SSR cache (e.g. keyframes)\nvar globalEffectStyleKeys = new Set();\n/**\n * @private Test only. Clear the global effect style keys.\n */\nexport var _cf = process.env.NODE_ENV !== 'production' ? function () {\n  return globalEffectStyleKeys.clear();\n} : undefined;\n// Parse CSSObject to style content\nexport var parseStyle = function parseStyle(interpolation) {\n  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n      root: true,\n      parentSelectors: []\n    },\n    root = _ref.root,\n    injectHash = _ref.injectHash,\n    parentSelectors = _ref.parentSelectors;\n  var hashId = config.hashId,\n    layer = config.layer,\n    path = config.path,\n    hashPriority = config.hashPriority,\n    _config$transformers = config.transformers,\n    transformers = _config$transformers === void 0 ? [] : _config$transformers,\n    _config$linters = config.linters,\n    linters = _config$linters === void 0 ? [] : _config$linters;\n  var styleStr = '';\n  var effectStyle = {};\n  function parseKeyframes(keyframes) {\n    var animationName = keyframes.getName(hashId);\n    if (!effectStyle[animationName]) {\n      var _parseStyle = parseStyle(keyframes.style, config, {\n          root: false,\n          parentSelectors: parentSelectors\n        }),\n        _parseStyle2 = _slicedToArray(_parseStyle, 1),\n        parsedStr = _parseStyle2[0];\n      effectStyle[animationName] = \"@keyframes \".concat(keyframes.getName(hashId)).concat(parsedStr);\n    }\n  }\n  function flattenList(list) {\n    var fullList = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    list.forEach(function (item) {\n      if (Array.isArray(item)) {\n        flattenList(item, fullList);\n      } else if (item) {\n        fullList.push(item);\n      }\n    });\n    return fullList;\n  }\n  var flattenStyleList = flattenList(Array.isArray(interpolation) ? interpolation : [interpolation]);\n  flattenStyleList.forEach(function (originStyle) {\n    // Only root level can use raw string\n    var style = typeof originStyle === 'string' && !root ? {} : originStyle;\n    if (typeof style === 'string') {\n      styleStr += \"\".concat(style, \"\\n\");\n    } else if (style._keyframe) {\n      // Keyframe\n      parseKeyframes(style);\n    } else {\n      var mergedStyle = transformers.reduce(function (prev, trans) {\n        var _a;\n        return ((_a = trans === null || trans === void 0 ? void 0 : trans.visit) === null || _a === void 0 ? void 0 : _a.call(trans, prev)) || prev;\n      }, style);\n      // Normal CSSObject\n      Object.keys(mergedStyle).forEach(function (key) {\n        var _a;\n        var value = mergedStyle[key];\n        if (_typeof(value) === 'object' && value && (key !== 'animationName' || !value._keyframe) && !isCompoundCSSProperty(value)) {\n          var subInjectHash = false;\n          // 当成嵌套对象来处理\n          var mergedKey = key.trim();\n          // Whether treat child as root. In most case it is false.\n          var nextRoot = false;\n          // 拆分多个选择器\n          if ((root || injectHash) && hashId) {\n            if (mergedKey.startsWith('@')) {\n              // 略过媒体查询，交给子节点继续插入 hashId\n              subInjectHash = true;\n            } else {\n              // 注入 hashId\n              mergedKey = injectSelectorHash(key, hashId, hashPriority);\n            }\n          } else if (root && !hashId && (mergedKey === '&' || mergedKey === '')) {\n            // In case of `{ '&': { a: { color: 'red' } } }` or `{ '': { a: { color: 'red' } } }` without hashId,\n            // we will get `&{a:{color:red;}}` or `{a:{color:red;}}` string for stylis to compile.\n            // But it does not conform to stylis syntax,\n            // and finally we will get `{color:red;}` as css, which is wrong.\n            // So we need to remove key in root, and treat child `{ a: { color: 'red' } }` as root.\n            mergedKey = '';\n            nextRoot = true;\n          }\n          var _parseStyle3 = parseStyle(value, config, {\n              root: nextRoot,\n              injectHash: subInjectHash,\n              parentSelectors: [].concat(_toConsumableArray(parentSelectors), [mergedKey])\n            }),\n            _parseStyle4 = _slicedToArray(_parseStyle3, 2),\n            parsedStr = _parseStyle4[0],\n            childEffectStyle = _parseStyle4[1];\n          effectStyle = _extends(_extends({}, effectStyle), childEffectStyle);\n          styleStr += \"\".concat(mergedKey).concat(parsedStr);\n        } else {\n          var actualValue = (_a = value === null || value === void 0 ? void 0 : value.value) !== null && _a !== void 0 ? _a : value;\n          if (process.env.NODE_ENV !== 'production' && (_typeof(value) !== 'object' || !(value === null || value === void 0 ? void 0 : value[SKIP_CHECK]))) {\n            [contentQuotesLinter, hashedAnimationLinter].concat(_toConsumableArray(linters)).forEach(function (linter) {\n              return linter(key, actualValue, {\n                path: path,\n                hashId: hashId,\n                parentSelectors: parentSelectors\n              });\n            });\n          }\n          // 如果是样式则直接插入\n          var styleName = key.replace(/[A-Z]/g, function (match) {\n            return \"-\".concat(match.toLowerCase());\n          });\n          // Auto suffix with px\n          var formatValue = actualValue;\n          if (!unitless[key] && typeof formatValue === 'number' && formatValue !== 0) {\n            formatValue = \"\".concat(formatValue, \"px\");\n          }\n          // handle animationName & Keyframe value\n          if (key === 'animationName' && (value === null || value === void 0 ? void 0 : value._keyframe)) {\n            parseKeyframes(value);\n            formatValue = value.getName(hashId);\n          }\n          styleStr += \"\".concat(styleName, \":\").concat(formatValue, \";\");\n        }\n      });\n    }\n  });\n  if (!root) {\n    styleStr = \"{\".concat(styleStr, \"}\");\n  } else if (layer && supportLayer()) {\n    var layerCells = layer.split(',');\n    var layerName = layerCells[layerCells.length - 1].trim();\n    styleStr = \"@layer \".concat(layerName, \" {\").concat(styleStr, \"}\");\n    // Order of layer if needed\n    if (layerCells.length > 1) {\n      // zombieJ: stylis do not support layer order, so we need to handle it manually.\n      styleStr = \"@layer \".concat(layer, \"{%%%:%}\").concat(styleStr);\n    }\n  }\n  return [styleStr, effectStyle];\n};\n// ============================================================================\n// ==                                Register                                ==\n// ============================================================================\nfunction uniqueHash(path, styleStr) {\n  return hash(\"\".concat(path.join('%')).concat(styleStr));\n}\n// function Empty() {\n//   return null;\n// }\n/**\n * Register a style to the global style sheet.\n */\nexport default function useStyleRegister(info, styleFn) {\n  var styleContext = useStyleInject();\n  var tokenKey = computed(function () {\n    return info.value.token._tokenKey;\n  });\n  var fullPath = computed(function () {\n    return [tokenKey.value].concat(_toConsumableArray(info.value.path));\n  });\n  // Check if need insert style\n  var isMergedClientSide = isClientSide;\n  if (process.env.NODE_ENV !== 'production' && styleContext.mock !== undefined) {\n    isMergedClientSide = styleContext.mock === 'client';\n  }\n  // const [cacheStyle[0], cacheStyle[1], cacheStyle[2]]\n  useGlobalCache('style', fullPath,\n  // Create cache if needed\n  function () {\n    var styleObj = styleFn();\n    var hashPriority = styleContext.hashPriority,\n      container = styleContext.container,\n      transformers = styleContext.transformers,\n      linters = styleContext.linters;\n    var _info$value = info.value,\n      path = _info$value.path,\n      hashId = _info$value.hashId,\n      layer = _info$value.layer;\n    var _parseStyle5 = parseStyle(styleObj, {\n        hashId: hashId,\n        hashPriority: hashPriority,\n        layer: layer,\n        path: path.join('-'),\n        transformers: transformers,\n        linters: linters\n      }),\n      _parseStyle6 = _slicedToArray(_parseStyle5, 2),\n      parsedStyle = _parseStyle6[0],\n      effectStyle = _parseStyle6[1];\n    var styleStr = normalizeStyle(parsedStyle);\n    var styleId = uniqueHash(fullPath.value, styleStr);\n    if (isMergedClientSide) {\n      var style = updateCSS(styleStr, styleId, {\n        mark: ATTR_MARK,\n        prepend: 'queue',\n        attachTo: container\n      });\n      style[CSS_IN_JS_INSTANCE] = CSS_IN_JS_INSTANCE_ID;\n      // Used for `useCacheToken` to remove on batch when token removed\n      style.setAttribute(ATTR_TOKEN, tokenKey.value);\n      // Dev usage to find which cache path made this easily\n      if (process.env.NODE_ENV !== 'production') {\n        style.setAttribute(ATTR_DEV_CACHE_PATH, fullPath.value.join('|'));\n      }\n      // Inject client side effect style\n      Object.keys(effectStyle).forEach(function (effectKey) {\n        if (!globalEffectStyleKeys.has(effectKey)) {\n          globalEffectStyleKeys.add(effectKey);\n          // Inject\n          updateCSS(normalizeStyle(effectStyle[effectKey]), \"_effect-\".concat(effectKey), {\n            mark: ATTR_MARK,\n            prepend: 'queue',\n            attachTo: container\n          });\n        }\n      });\n    }\n    return [styleStr, tokenKey.value, styleId];\n  },\n  // Remove cache if no need\n  function (_ref2, fromHMR) {\n    var _ref3 = _slicedToArray(_ref2, 3),\n      styleId = _ref3[2];\n    if ((fromHMR || styleContext.autoClear) && isClientSide) {\n      removeCSS(styleId, {\n        mark: ATTR_MARK\n      });\n    }\n  });\n  return function (node) {\n    return node;\n    // let styleNode: VueNode;\n    // if (!styleContext.ssrInline || isMergedClientSide || !styleContext.defaultCache) {\n    //   styleNode = <Empty />;\n    // } else {\n    //   styleNode = (\n    //     <style\n    //       {...{\n    //         [ATTR_TOKEN]: cacheStyle.value[1],\n    //         [ATTR_MARK]: cacheStyle.value[2],\n    //       }}\n    //       innerHTML={cacheStyle.value[0]}\n    //     />\n    //   );\n    // }\n    // return (\n    //   <>\n    //     {styleNode}\n    //     {node}\n    //   </>\n    // );\n  };\n}\n// ============================================================================\n// ==                                  SSR                                   ==\n// ============================================================================\nexport function extractStyle(cache) {\n  // prefix with `style` is used for `useStyleRegister` to cache style context\n  var styleKeys = Array.from(cache.cache.keys()).filter(function (key) {\n    return key.startsWith('style%');\n  });\n  // const tokenStyles: Record<string, string[]> = {};\n  var styleText = '';\n  styleKeys.forEach(function (key) {\n    var _cache$cache$get$ = _slicedToArray(cache.cache.get(key)[1], 3),\n      styleStr = _cache$cache$get$[0],\n      tokenKey = _cache$cache$get$[1],\n      styleId = _cache$cache$get$[2];\n    styleText += \"<style \".concat(ATTR_TOKEN, \"=\\\"\").concat(tokenKey, \"\\\" \").concat(ATTR_MARK, \"=\\\"\").concat(styleId, \"\\\">\").concat(styleStr, \"</style>\");\n  });\n  return styleText;\n}","map":{"version":3,"names":["_extends","_slicedToArray","_toConsumableArray","_typeof","hash","unitless","compile","serialize","stringify","contentQuotesLinter","hashedAnimationLinter","useStyleInject","ATTR_DEV_CACHE_PATH","ATTR_MARK","ATTR_TOKEN","CSS_IN_JS_INSTANCE","CSS_IN_JS_INSTANCE_ID","supportLayer","useGlobalCache","canUseDom","removeCSS","updateCSS","computed","isClientSide","SKIP_CHECK","normalizeStyle","styleStr","serialized","replace","isCompoundCSSProperty","value","injectSelectorHash","key","hashId","hashPriority","hashClassName","concat","hashSelector","keys","split","map","k","_a","fullPath","trim","firstPath","htmlElement","match","slice","length","join","globalEffectStyleKeys","Set","_cf","process","env","NODE_ENV","clear","undefined","parseStyle","interpolation","config","arguments","_ref","root","parentSelectors","injectHash","layer","path","_config$transformers","transformers","_config$linters","linters","effectStyle","parseKeyframes","keyframes","animationName","getName","_parseStyle","style","_parseStyle2","parsedStr","flattenList","list","fullList","forEach","item","Array","isArray","push","flattenStyleList","originStyle","_keyframe","mergedStyle","reduce","prev","trans","visit","call","Object","subInjectHash","mergedKey","nextRoot","startsWith","_parseStyle3","_parseStyle4","childEffectStyle","actualValue","linter","styleName","toLowerCase","formatValue","layerCells","layerName","uniqueHash","useStyleRegister","info","styleFn","styleContext","tokenKey","token","_tokenKey","isMergedClientSide","mock","styleObj","container","_info$value","_parseStyle5","_parseStyle6","parsedStyle","styleId","mark","prepend","attachTo","setAttribute","effectKey","has","add","_ref2","fromHMR","_ref3","autoClear","node","extractStyle","cache","styleKeys","from","filter","styleText","_cache$cache$get$","get"],"sources":["/home/aaz_alan/work/new_widget/node_modules/ant-design-vue/es/_util/cssinjs/hooks/useStyleRegister.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport hash from '@emotion/hash';\n// @ts-ignore\nimport unitless from '@emotion/unitless';\nimport { compile, serialize, stringify } from 'stylis';\nimport { contentQuotesLinter, hashedAnimationLinter } from '../linters';\nimport { useStyleInject, ATTR_DEV_CACHE_PATH, ATTR_MARK, ATTR_TOKEN, CSS_IN_JS_INSTANCE, CSS_IN_JS_INSTANCE_ID } from '../StyleContext';\nimport { supportLayer } from '../util';\nimport useGlobalCache from './useGlobalCache';\nimport canUseDom from '../../canUseDom';\nimport { removeCSS, updateCSS } from '../../../vc-util/Dom/dynamicCSS';\nimport { computed } from 'vue';\nvar isClientSide = canUseDom();\nvar SKIP_CHECK = '_skip_check_';\n// ============================================================================\n// ==                                 Parser                                 ==\n// ============================================================================\n// Preprocessor style content to browser support one\nexport function normalizeStyle(styleStr) {\n  var serialized = serialize(compile(styleStr), stringify);\n  return serialized.replace(/\\{%%%\\:[^;];}/g, ';');\n}\nfunction isCompoundCSSProperty(value) {\n  return _typeof(value) === 'object' && value && SKIP_CHECK in value;\n}\n// 注入 hash 值\nfunction injectSelectorHash(key, hashId, hashPriority) {\n  if (!hashId) {\n    return key;\n  }\n  var hashClassName = \".\".concat(hashId);\n  var hashSelector = hashPriority === 'low' ? \":where(\".concat(hashClassName, \")\") : hashClassName;\n  // 注入 hashId\n  var keys = key.split(',').map(function (k) {\n    var _a;\n    var fullPath = k.trim().split(/\\s+/);\n    // 如果 Selector 第一个是 HTML Element，那我们就插到它的后面。反之，就插到最前面。\n    var firstPath = fullPath[0] || '';\n    var htmlElement = ((_a = firstPath.match(/^\\w+/)) === null || _a === void 0 ? void 0 : _a[0]) || '';\n    firstPath = \"\".concat(htmlElement).concat(hashSelector).concat(firstPath.slice(htmlElement.length));\n    return [firstPath].concat(_toConsumableArray(fullPath.slice(1))).join(' ');\n  });\n  return keys.join(',');\n}\n// Global effect style will mount once and not removed\n// The effect will not save in SSR cache (e.g. keyframes)\nvar globalEffectStyleKeys = new Set();\n/**\n * @private Test only. Clear the global effect style keys.\n */\nexport var _cf = process.env.NODE_ENV !== 'production' ? function () {\n  return globalEffectStyleKeys.clear();\n} : undefined;\n// Parse CSSObject to style content\nexport var parseStyle = function parseStyle(interpolation) {\n  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n      root: true,\n      parentSelectors: []\n    },\n    root = _ref.root,\n    injectHash = _ref.injectHash,\n    parentSelectors = _ref.parentSelectors;\n  var hashId = config.hashId,\n    layer = config.layer,\n    path = config.path,\n    hashPriority = config.hashPriority,\n    _config$transformers = config.transformers,\n    transformers = _config$transformers === void 0 ? [] : _config$transformers,\n    _config$linters = config.linters,\n    linters = _config$linters === void 0 ? [] : _config$linters;\n  var styleStr = '';\n  var effectStyle = {};\n  function parseKeyframes(keyframes) {\n    var animationName = keyframes.getName(hashId);\n    if (!effectStyle[animationName]) {\n      var _parseStyle = parseStyle(keyframes.style, config, {\n          root: false,\n          parentSelectors: parentSelectors\n        }),\n        _parseStyle2 = _slicedToArray(_parseStyle, 1),\n        parsedStr = _parseStyle2[0];\n      effectStyle[animationName] = \"@keyframes \".concat(keyframes.getName(hashId)).concat(parsedStr);\n    }\n  }\n  function flattenList(list) {\n    var fullList = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    list.forEach(function (item) {\n      if (Array.isArray(item)) {\n        flattenList(item, fullList);\n      } else if (item) {\n        fullList.push(item);\n      }\n    });\n    return fullList;\n  }\n  var flattenStyleList = flattenList(Array.isArray(interpolation) ? interpolation : [interpolation]);\n  flattenStyleList.forEach(function (originStyle) {\n    // Only root level can use raw string\n    var style = typeof originStyle === 'string' && !root ? {} : originStyle;\n    if (typeof style === 'string') {\n      styleStr += \"\".concat(style, \"\\n\");\n    } else if (style._keyframe) {\n      // Keyframe\n      parseKeyframes(style);\n    } else {\n      var mergedStyle = transformers.reduce(function (prev, trans) {\n        var _a;\n        return ((_a = trans === null || trans === void 0 ? void 0 : trans.visit) === null || _a === void 0 ? void 0 : _a.call(trans, prev)) || prev;\n      }, style);\n      // Normal CSSObject\n      Object.keys(mergedStyle).forEach(function (key) {\n        var _a;\n        var value = mergedStyle[key];\n        if (_typeof(value) === 'object' && value && (key !== 'animationName' || !value._keyframe) && !isCompoundCSSProperty(value)) {\n          var subInjectHash = false;\n          // 当成嵌套对象来处理\n          var mergedKey = key.trim();\n          // Whether treat child as root. In most case it is false.\n          var nextRoot = false;\n          // 拆分多个选择器\n          if ((root || injectHash) && hashId) {\n            if (mergedKey.startsWith('@')) {\n              // 略过媒体查询，交给子节点继续插入 hashId\n              subInjectHash = true;\n            } else {\n              // 注入 hashId\n              mergedKey = injectSelectorHash(key, hashId, hashPriority);\n            }\n          } else if (root && !hashId && (mergedKey === '&' || mergedKey === '')) {\n            // In case of `{ '&': { a: { color: 'red' } } }` or `{ '': { a: { color: 'red' } } }` without hashId,\n            // we will get `&{a:{color:red;}}` or `{a:{color:red;}}` string for stylis to compile.\n            // But it does not conform to stylis syntax,\n            // and finally we will get `{color:red;}` as css, which is wrong.\n            // So we need to remove key in root, and treat child `{ a: { color: 'red' } }` as root.\n            mergedKey = '';\n            nextRoot = true;\n          }\n          var _parseStyle3 = parseStyle(value, config, {\n              root: nextRoot,\n              injectHash: subInjectHash,\n              parentSelectors: [].concat(_toConsumableArray(parentSelectors), [mergedKey])\n            }),\n            _parseStyle4 = _slicedToArray(_parseStyle3, 2),\n            parsedStr = _parseStyle4[0],\n            childEffectStyle = _parseStyle4[1];\n          effectStyle = _extends(_extends({}, effectStyle), childEffectStyle);\n          styleStr += \"\".concat(mergedKey).concat(parsedStr);\n        } else {\n          var actualValue = (_a = value === null || value === void 0 ? void 0 : value.value) !== null && _a !== void 0 ? _a : value;\n          if (process.env.NODE_ENV !== 'production' && (_typeof(value) !== 'object' || !(value === null || value === void 0 ? void 0 : value[SKIP_CHECK]))) {\n            [contentQuotesLinter, hashedAnimationLinter].concat(_toConsumableArray(linters)).forEach(function (linter) {\n              return linter(key, actualValue, {\n                path: path,\n                hashId: hashId,\n                parentSelectors: parentSelectors\n              });\n            });\n          }\n          // 如果是样式则直接插入\n          var styleName = key.replace(/[A-Z]/g, function (match) {\n            return \"-\".concat(match.toLowerCase());\n          });\n          // Auto suffix with px\n          var formatValue = actualValue;\n          if (!unitless[key] && typeof formatValue === 'number' && formatValue !== 0) {\n            formatValue = \"\".concat(formatValue, \"px\");\n          }\n          // handle animationName & Keyframe value\n          if (key === 'animationName' && (value === null || value === void 0 ? void 0 : value._keyframe)) {\n            parseKeyframes(value);\n            formatValue = value.getName(hashId);\n          }\n          styleStr += \"\".concat(styleName, \":\").concat(formatValue, \";\");\n        }\n      });\n    }\n  });\n  if (!root) {\n    styleStr = \"{\".concat(styleStr, \"}\");\n  } else if (layer && supportLayer()) {\n    var layerCells = layer.split(',');\n    var layerName = layerCells[layerCells.length - 1].trim();\n    styleStr = \"@layer \".concat(layerName, \" {\").concat(styleStr, \"}\");\n    // Order of layer if needed\n    if (layerCells.length > 1) {\n      // zombieJ: stylis do not support layer order, so we need to handle it manually.\n      styleStr = \"@layer \".concat(layer, \"{%%%:%}\").concat(styleStr);\n    }\n  }\n  return [styleStr, effectStyle];\n};\n// ============================================================================\n// ==                                Register                                ==\n// ============================================================================\nfunction uniqueHash(path, styleStr) {\n  return hash(\"\".concat(path.join('%')).concat(styleStr));\n}\n// function Empty() {\n//   return null;\n// }\n/**\n * Register a style to the global style sheet.\n */\nexport default function useStyleRegister(info, styleFn) {\n  var styleContext = useStyleInject();\n  var tokenKey = computed(function () {\n    return info.value.token._tokenKey;\n  });\n  var fullPath = computed(function () {\n    return [tokenKey.value].concat(_toConsumableArray(info.value.path));\n  });\n  // Check if need insert style\n  var isMergedClientSide = isClientSide;\n  if (process.env.NODE_ENV !== 'production' && styleContext.mock !== undefined) {\n    isMergedClientSide = styleContext.mock === 'client';\n  }\n  // const [cacheStyle[0], cacheStyle[1], cacheStyle[2]]\n  useGlobalCache('style', fullPath,\n  // Create cache if needed\n  function () {\n    var styleObj = styleFn();\n    var hashPriority = styleContext.hashPriority,\n      container = styleContext.container,\n      transformers = styleContext.transformers,\n      linters = styleContext.linters;\n    var _info$value = info.value,\n      path = _info$value.path,\n      hashId = _info$value.hashId,\n      layer = _info$value.layer;\n    var _parseStyle5 = parseStyle(styleObj, {\n        hashId: hashId,\n        hashPriority: hashPriority,\n        layer: layer,\n        path: path.join('-'),\n        transformers: transformers,\n        linters: linters\n      }),\n      _parseStyle6 = _slicedToArray(_parseStyle5, 2),\n      parsedStyle = _parseStyle6[0],\n      effectStyle = _parseStyle6[1];\n    var styleStr = normalizeStyle(parsedStyle);\n    var styleId = uniqueHash(fullPath.value, styleStr);\n    if (isMergedClientSide) {\n      var style = updateCSS(styleStr, styleId, {\n        mark: ATTR_MARK,\n        prepend: 'queue',\n        attachTo: container\n      });\n      style[CSS_IN_JS_INSTANCE] = CSS_IN_JS_INSTANCE_ID;\n      // Used for `useCacheToken` to remove on batch when token removed\n      style.setAttribute(ATTR_TOKEN, tokenKey.value);\n      // Dev usage to find which cache path made this easily\n      if (process.env.NODE_ENV !== 'production') {\n        style.setAttribute(ATTR_DEV_CACHE_PATH, fullPath.value.join('|'));\n      }\n      // Inject client side effect style\n      Object.keys(effectStyle).forEach(function (effectKey) {\n        if (!globalEffectStyleKeys.has(effectKey)) {\n          globalEffectStyleKeys.add(effectKey);\n          // Inject\n          updateCSS(normalizeStyle(effectStyle[effectKey]), \"_effect-\".concat(effectKey), {\n            mark: ATTR_MARK,\n            prepend: 'queue',\n            attachTo: container\n          });\n        }\n      });\n    }\n    return [styleStr, tokenKey.value, styleId];\n  },\n  // Remove cache if no need\n  function (_ref2, fromHMR) {\n    var _ref3 = _slicedToArray(_ref2, 3),\n      styleId = _ref3[2];\n    if ((fromHMR || styleContext.autoClear) && isClientSide) {\n      removeCSS(styleId, {\n        mark: ATTR_MARK\n      });\n    }\n  });\n  return function (node) {\n    return node;\n    // let styleNode: VueNode;\n    // if (!styleContext.ssrInline || isMergedClientSide || !styleContext.defaultCache) {\n    //   styleNode = <Empty />;\n    // } else {\n    //   styleNode = (\n    //     <style\n    //       {...{\n    //         [ATTR_TOKEN]: cacheStyle.value[1],\n    //         [ATTR_MARK]: cacheStyle.value[2],\n    //       }}\n    //       innerHTML={cacheStyle.value[0]}\n    //     />\n    //   );\n    // }\n    // return (\n    //   <>\n    //     {styleNode}\n    //     {node}\n    //   </>\n    // );\n  };\n}\n// ============================================================================\n// ==                                  SSR                                   ==\n// ============================================================================\nexport function extractStyle(cache) {\n  // prefix with `style` is used for `useStyleRegister` to cache style context\n  var styleKeys = Array.from(cache.cache.keys()).filter(function (key) {\n    return key.startsWith('style%');\n  });\n  // const tokenStyles: Record<string, string[]> = {};\n  var styleText = '';\n  styleKeys.forEach(function (key) {\n    var _cache$cache$get$ = _slicedToArray(cache.cache.get(key)[1], 3),\n      styleStr = _cache$cache$get$[0],\n      tokenKey = _cache$cache$get$[1],\n      styleId = _cache$cache$get$[2];\n    styleText += \"<style \".concat(ATTR_TOKEN, \"=\\\"\").concat(tokenKey, \"\\\" \").concat(ATTR_MARK, \"=\\\"\").concat(styleId, \"\\\">\").concat(styleStr, \"</style>\");\n  });\n  return styleText;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}