{"ast":null,"code":"import \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport { computed, inject, provide } from 'vue';\nimport { objectType } from '../_util/type';\nexport var defaultIconPrefixCls = 'anticon';\nexport var GlobalFormContextKey = Symbol('GlobalFormContextKey');\nexport var useProvideGlobalForm = function useProvideGlobalForm(state) {\n  provide(GlobalFormContextKey, state);\n};\nexport var useInjectGlobalForm = function useInjectGlobalForm() {\n  return inject(GlobalFormContextKey, {\n    validateMessages: computed(function () {\n      return undefined;\n    })\n  });\n};\nexport var GlobalConfigContextKey = Symbol('GlobalConfigContextKey');\nexport var configProviderProps = function configProviderProps() {\n  return {\n    iconPrefixCls: String,\n    getTargetContainer: {\n      type: Function\n    },\n    getPopupContainer: {\n      type: Function\n    },\n    prefixCls: String,\n    getPrefixCls: {\n      type: Function\n    },\n    renderEmpty: {\n      type: Function\n    },\n    transformCellText: {\n      type: Function\n    },\n    csp: objectType(),\n    input: objectType(),\n    autoInsertSpaceInButton: {\n      type: Boolean,\n      \"default\": undefined\n    },\n    locale: objectType(),\n    pageHeader: objectType(),\n    componentSize: {\n      type: String\n    },\n    componentDisabled: {\n      type: Boolean,\n      \"default\": undefined\n    },\n    direction: {\n      type: String\n    },\n    space: objectType(),\n    virtual: {\n      type: Boolean,\n      \"default\": undefined\n    },\n    dropdownMatchSelectWidth: {\n      type: [Number, Boolean],\n      \"default\": true\n    },\n    form: objectType(),\n    pagination: objectType(),\n    theme: objectType(),\n    select: objectType()\n  };\n};\nexport var configProviderKey = Symbol('configProvider');\nexport var defaultConfigProvider = {\n  getPrefixCls: function getPrefixCls(suffixCls, customizePrefixCls) {\n    if (customizePrefixCls) return customizePrefixCls;\n    return suffixCls ? \"ant-\".concat(suffixCls) : 'ant';\n  },\n  iconPrefixCls: computed(function () {\n    return defaultIconPrefixCls;\n  })\n};\nexport var useConfigContextInject = function useConfigContextInject() {\n  return inject(configProviderKey, defaultConfigProvider);\n};\nexport var useConfigContextProvider = function useConfigContextProvider(props) {\n  return provide(configProviderKey, props);\n};","map":{"version":3,"names":["computed","inject","provide","objectType","defaultIconPrefixCls","GlobalFormContextKey","Symbol","useProvideGlobalForm","state","useInjectGlobalForm","validateMessages","undefined","GlobalConfigContextKey","configProviderProps","iconPrefixCls","String","getTargetContainer","type","Function","getPopupContainer","prefixCls","getPrefixCls","renderEmpty","transformCellText","csp","input","autoInsertSpaceInButton","Boolean","locale","pageHeader","componentSize","componentDisabled","direction","space","virtual","dropdownMatchSelectWidth","Number","form","pagination","theme","select","configProviderKey","defaultConfigProvider","suffixCls","customizePrefixCls","concat","useConfigContextInject","useConfigContextProvider","props"],"sources":["/home/aaz_alan/work/new_widget/node_modules/ant-design-vue/es/config-provider/context.js"],"sourcesContent":["import { computed, inject, provide } from 'vue';\nimport { objectType } from '../_util/type';\nexport var defaultIconPrefixCls = 'anticon';\nexport var GlobalFormContextKey = Symbol('GlobalFormContextKey');\nexport var useProvideGlobalForm = function useProvideGlobalForm(state) {\n  provide(GlobalFormContextKey, state);\n};\nexport var useInjectGlobalForm = function useInjectGlobalForm() {\n  return inject(GlobalFormContextKey, {\n    validateMessages: computed(function () {\n      return undefined;\n    })\n  });\n};\nexport var GlobalConfigContextKey = Symbol('GlobalConfigContextKey');\nexport var configProviderProps = function configProviderProps() {\n  return {\n    iconPrefixCls: String,\n    getTargetContainer: {\n      type: Function\n    },\n    getPopupContainer: {\n      type: Function\n    },\n    prefixCls: String,\n    getPrefixCls: {\n      type: Function\n    },\n    renderEmpty: {\n      type: Function\n    },\n    transformCellText: {\n      type: Function\n    },\n    csp: objectType(),\n    input: objectType(),\n    autoInsertSpaceInButton: {\n      type: Boolean,\n      default: undefined\n    },\n    locale: objectType(),\n    pageHeader: objectType(),\n    componentSize: {\n      type: String\n    },\n    componentDisabled: {\n      type: Boolean,\n      default: undefined\n    },\n    direction: {\n      type: String\n    },\n    space: objectType(),\n    virtual: {\n      type: Boolean,\n      default: undefined\n    },\n    dropdownMatchSelectWidth: {\n      type: [Number, Boolean],\n      default: true\n    },\n    form: objectType(),\n    pagination: objectType(),\n    theme: objectType(),\n    select: objectType()\n  };\n};\nexport var configProviderKey = Symbol('configProvider');\nexport var defaultConfigProvider = {\n  getPrefixCls: function getPrefixCls(suffixCls, customizePrefixCls) {\n    if (customizePrefixCls) return customizePrefixCls;\n    return suffixCls ? \"ant-\".concat(suffixCls) : 'ant';\n  },\n  iconPrefixCls: computed(function () {\n    return defaultIconPrefixCls;\n  })\n};\nexport var useConfigContextInject = function useConfigContextInject() {\n  return inject(configProviderKey, defaultConfigProvider);\n};\nexport var useConfigContextProvider = function useConfigContextProvider(props) {\n  return provide(configProviderKey, props);\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}